# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: 9ju17UI6^Hvk
          POSTGRES_USER: event
          POSTGRES_PORT: 5433
          POSTGRESQL_DB: micro_events
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Database Init
      run: |
        sleep 5
        createdb -h localhost -U event micro_events
        psql -h localhost -U event -d micro_events -f ./app/migrations/init.up.sql
        
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: checkout
      uses: actions/checkout@v3
      
    - name: Install golang-migrate
      run: |
        curl -L https://github.com/golang-migrate/migrate/releases/download/v4.12.2/migrate.linux-amd64.tar.gz | tar xvz
        sudo mv migrate.linux-amd64 /usr/bin/migrate
        which migrate

    - name: Run migrations
      run: make migrateup

    - name: Test
      run: go mod tidy && go test -v ./app/backend -timeout=60s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov

    - name: Build
      run:  go mod vendor && go build -v -mod=vendor
      working-directory: app/backend

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v3
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      
