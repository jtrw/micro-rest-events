# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: ["master"]
  pull_request:
    branches: ["master"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      # - name: Database Init
      #   run: |
      #     sleep 5
      #     PGPASSWORD=9ju17UI6^Hvk createdb -h localhost -U event micro_events -p 5532
      #     ls -la
      #     PGPASSWORD=9ju17UI6^Hvk psql -h localhost -U event -d micro_events -f ./migrations/pgsql/init.up.sql -p 5532

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: checkout
        uses: actions/checkout@v3

      # - name: Install golang-migrate
      #   run: |
      #     curl -L https://github.com/golang-migrate/migrate/releases/download/v4.12.2/migrate.linux-amd64.tar.gz | tar xvz
      #     sudo mv migrate.linux-amd64 /usr/bin/migrate
      #     which migrate

      # - name: Run migrations
      #   run: make migrateup

      - name: Test
        run: cd backend && go mod tidy && go test -v ./... -timeout=60s -coverprofile=$GITHUB_WORKSPACE/coverage.xml -covermode=atomic

      - name: Build
        run: go mod vendor && go build -v -mod=vendor
        working-directory: backend/app

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          verbose: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
